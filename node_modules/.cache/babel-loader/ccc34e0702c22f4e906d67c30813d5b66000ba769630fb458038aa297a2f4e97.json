{"ast":null,"code":"var _jsxFileName = \"/home/artashes/Desktop/codeex/codeex/src/lang/RuReact_4.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RuReact_4() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0432 React(Fetch Data)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"1. \\u041F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E API fetch:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" fetch('https://api.example.com/data') \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: '.then(response => response.json())'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: '.then(data => console.log(data))'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: '.catch(error => console.error(error))'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0412 \\u044D\\u0442\\u043E\\u043C \\u043F\\u0440\\u0438\\u043C\\u0435\\u0440\\u0435 \\u043C\\u044B \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0435\\u043C \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441 \\u043D\\u0430 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440, \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u044F API \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 65\n      }, this), \". \\u041E\\u0431\\u044A\\u0435\\u043A\\u0442 \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 86\n      }, this), \" \\u043F\\u0440\\u0435\\u043E\\u0431\\u0440\\u0430\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442 JSON \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u043C\\u0435\\u0442\\u043E\\u0434\\u0430 \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"json()\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 147\n      }, this), \", \\u0430 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0432\\u044B\\u0432\\u043E\\u0434\\u044F\\u0442\\u0441\\u044F \\u0432 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C. \\u0415\\u0441\\u043B\\u0438 \\u043F\\u0440\\u043E\\u0438\\u0441\\u0445\\u043E\\u0434\\u0438\\u0442 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430, \\u043E\\u043D\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0445\\u0432\\u0430\\u0442\\u044B\\u0432\\u0430\\u0435\\u0442\\u0441\\u044F \\u0438 \\u0432\\u044B\\u0432\\u043E\\u0434\\u0438\\u0442\\u0441\\u044F \\u0432 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"2. \\u041E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0438 \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = RuReact_4;\nexport default RuReact_4;\nvar _c;\n$RefreshReg$(_c, \"RuReact_4\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RuReact_4","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/artashes/Desktop/codeex/codeex/src/lang/RuReact_4.js"],"sourcesContent":["import React from 'react'\n\nfunction RuReact_4() {\n  return (\n    <div>\n      \n      <h1>Получение данных в React(Fetch Data)</h1>\n\n      <p>1. Получение данных с помощью API fetch:</p>\n\n  <code>\n    \n    <p>{\" fetch('https://api.example.com/data') \"}</p>\n\n    <p>{'.then(response => response.json())'}</p>\n\n    <p>{'.then(data => console.log(data))'}</p>\n\n    <p>{'.catch(error => console.error(error))'}</p>\n\n  </code>\n\n<p>В этом примере мы отправляем запрос на сервер, используя API <b>fetch</b>. Объект <b>response</b> преобразуется в формат JSON с помощью метода <b>json()</b>, а полученные данные выводятся в консоль. Если происходит ошибка, она перехватывается и выводится в консоль.</p>\n\n\n<p>2. Отображение полученных данных в состоянии компонента:</p>\n\n\n\n\n\n\n\n    </div>\n  )\n}\n\nexport default RuReact_4;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EACnB,oBACED,OAAA;IAAAE,QAAA,gBAEEF,OAAA;MAAAE,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAE7CN,OAAA;MAAAE,QAAA,EAAG;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAEnDN,OAAA;MAAAE,QAAA,gBAEEF,OAAA;QAAAE,QAAA,EAAI;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAElDN,OAAA;QAAAE,QAAA,EAAI;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAE7CN,OAAA;QAAAE,QAAA,EAAI;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAE3CN,OAAA;QAAAE,QAAA,EAAI;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE3C,eAETN,OAAA;MAAAE,QAAA,GAAG,0SAA6D,eAAAF,OAAA;QAAAE,QAAA,EAAG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,2CAAS,eAAAN,OAAA;QAAAE,QAAA,EAAG;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,4NAA8C,eAAAN,OAAA;QAAAE,QAAA,EAAG;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,mjBAA6G;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAGhRN,OAAA;MAAAE,QAAA,EAAG;IAAwD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAQrD;AAEV;AAACC,EAAA,GAjCQN,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}